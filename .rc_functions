# vim:ft=sh
function parse_yaml () {
   local s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
   sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $1 |
   awk -F$fs '{
      indent = length($1)/2;
      vname[indent] = $2;
      for (i in vname) {if (i > indent) {delete vname[i]}}
      if (length($3) > 0) {
         vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("___")}
         printf("%s%s=\"%s\"\n", vn, $2, $3);
      }
   }'
   return 0
}

function fzf_add_header() {
  echo $1
  while read x; do
    echo $x
  done
}

function ff() {
  local target=${1:-"$(pwd)"}
  local depth=${2:-3}
  local selected=$(find $target -maxdepth $depth | grep -v -e '\.git\/' | fzf)
  echo $selected
  if [[ -n "$selected" ]]; then
    if [[ -d "$selected" ]]; then
      cd $selected
    else
      cd $(dirname $selected) && vim $selected
    fi
  else
    echo "$selected is not found..."
  fi
}

function agv() {
  local selected=$(ag -s --ignore '\.git' $1 | fzf)
  local filename=$(echo "$selected" | awk -F ':' '{print $1}')
  local line=$(echo "$selected" | awk -F ':' '{print $2}')
  if [[ -L "$filename" || -f "$filename" ]]; then
    echo "filename: $filename, line: $line"
    vim +$line $filename
  else
    echo "$selected is not file..."
  fi
}

function tat() {
  local selected=$(tmux ls | fzf | awk -F':' '{print $1}')
  tmux a -t $selected
}

function ghash() {
  git log --oneline --decorate --all --format="%Creset%x09%C(yellow)%h%Creset %C(magenta reverse)%d%Creset %s" | fzf --ansi | awk '{print $1}'
}

function gshow() {
  git show $(ghash):$1
}
